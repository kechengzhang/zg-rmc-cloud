server:
  port: 8069
   #防止Cookie冲突，冲突会导致登录验证不通过 单点登录
#  servlet:
#      session:
#        cookie:
#          name: OAUTH2-CLIENT-SESSIONID
#oauth2-server-url: http://localhost:8201
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/zg_mall?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai&useSSL=false
    username: root
    password: 1qaz@WSX
#    password: root
    druid:
      initial-size: 5 #连接池初始化大小
      min-idle: 10 #最小空闲连接数
      max-active: 20 #最大连接数
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  redis:
      host: redis # Redis服务器地址
      database: 1 # Redis数据库索引（默认为0）
      port: 6379 # Redis服务器连接端口
      password: zkc654321 # Redis服务器连接密码（默认为空）
      timeout: 3000ms # 连接超时时间（毫秒）
      lettuce:
            pool:
              max-active: 8
              max-wait: -1ms
              max-idle: 8
              min-idle: 0


#  security:
#      oauth2:
#        client:
#          registration:
#            your-client-id: # 替换为你的客户端 ID
#              client-id: admin
#              client-secret: 123456
#              redirect-uri: http://localhost:8069/login # 设置重定向 URI
#              provider: your-authorization-server # 替换为你的认证服务器名称
mybatis-plus:
#  configuration:
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
  # 关闭mybatisplus启动图标
    banner: off
    db-config:
      # 全局默认主键类型
      id-type: AUTO
      # 表名、是否使用下划线命名，默认数据库表使用下划线命名
      table-underline: true
      # 逻辑已删除值(默认为 1)
      logic-delete-value: 1
      # 逻辑未删除值(默认为 0)
      logic-not-delete-value: 0
  mapper-locations:
   - /mapper/*.xml
management: #开启SpringBoot Admin的监控
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
  #单点登录
#security:
#  oauth2: #与oauth2-server对应的配置
#    client:
#      client-id: admin
#      client-secret: 123456
#      user-authorization-uri: ${oauth2-server-url}/oauth/authorize
#      access-token-uri: ${oauth2-server-url}/oauth/token
#    resource:
#      jwt:
#        key-uri: ${oauth2-server-url}/oauth/token_key

#
#security:
#  oauth2:
#    client:
#      client-id: user-app
#      client-secret: 123456
#      user-authorization-uri: ${oauth2-server-url}/oauth/authorize
#      access-token-uri: ${oauth2-server-url}/oauth/token
##      registered-redirect-uri: # 在这里配置重定向 URI
##        - http://www.baidu.com
#    resource:
#      jwt:
##        key-uri: ${oauth2-server-url}/oauth/token_key
#        key-uri: ${oauth2-server-url}/rmc-auth/rsa/publicKey